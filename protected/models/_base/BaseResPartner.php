<?php

/**
 * This is the model base class for the table "res_partner".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ResPartner".
 *
 * Columns in table "res_partner" available as properties of the model,
 * followed by relations of table "res_partner" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $company_id
 * @property integer $create_uid
 * @property string $create_date
 * @property integer $write_uid
 * @property string $write_date
 * @property string $comment
 * @property integer $active
 * @property integer $country_id
 * @property string $lang
 * @property integer $parent_id
 * @property integer $title
 * @property string $address
 * @property string $address1
 * @property string $phone
 * @property string $mobile
 * @property string $email
 * @property string $website
 * @property string $city
 * @property string $fax
 * @property string $zipcode
 * @property integer $customer
 * @property integer $supplier
 * @property string $code
 *
 * @property ResCompany[] $resCompanies
 * @property ResCompany $company
 * @property ResCountry $country
 * @property ResPartnerTitle $title0
 * @property ResPartnerResPartnerCategoryRel[] $resPartnerResPartnerCategoryRels
 * @property ResPartnerTitle[] $resPartnerTitles
 * @property Users[] $users
 */
abstract class BaseResPartner extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'res_partner';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ResPartner|ResPartners', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, lang', 'required'),
			array('company_id, create_uid, write_uid, active, country_id, parent_id, title, customer, supplier', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>128),
			array('lang', 'length', 'max'=>64),
			array('address, address1, phone, mobile, email, website, city, fax, zipcode, code', 'length', 'max'=>45),
			array('create_date, write_date, comment', 'safe'),
			array('company_id, create_uid, create_date, write_uid, write_date, comment, active, country_id, parent_id, title, address, address1, phone, mobile, email, website, city, fax, zipcode, customer, supplier, code', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, company_id, create_uid, create_date, write_uid, write_date, comment, active, country_id, lang, parent_id, title, address, address1, phone, mobile, email, website, city, fax, zipcode, customer, supplier, code', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'resCompanies' => array(self::HAS_MANY, 'ResCompany', 'partner_id'),
			'company' => array(self::BELONGS_TO, 'ResCompany', 'company_id'),
			'country' => array(self::BELONGS_TO, 'ResCountry', 'country_id'),
			'title0' => array(self::BELONGS_TO, 'ResPartnerTitle', 'title'),
			'resPartnerResPartnerCategoryRels' => array(self::HAS_MANY, 'ResPartnerResPartnerCategoryRel', 'partner_id'),
			'resPartnerTitles' => array(self::HAS_MANY, 'ResPartnerTitle', 'partner_id'),
			'users' => array(self::HAS_MANY, 'Users', 'partner_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'company_id' => null,
			'create_uid' => Yii::t('app', 'Create Uid'),
			'create_date' => Yii::t('app', 'Create Date'),
			'write_uid' => Yii::t('app', 'Write Uid'),
			'write_date' => Yii::t('app', 'Write Date'),
			'comment' => Yii::t('app', 'Comment'),
			'active' => Yii::t('app', 'Active'),
			'country_id' => null,
			'lang' => Yii::t('app', 'Lang'),
			'parent_id' => Yii::t('app', 'Parent'),
			'title' => null,
			'address' => Yii::t('app', 'Address'),
			'address1' => Yii::t('app', 'Address1'),
			'phone' => Yii::t('app', 'Phone'),
			'mobile' => Yii::t('app', 'Mobile'),
			'email' => Yii::t('app', 'Email'),
			'website' => Yii::t('app', 'Website'),
			'city' => Yii::t('app', 'City'),
			'fax' => Yii::t('app', 'Fax'),
			'zipcode' => Yii::t('app', 'Zipcode'),
			'customer' => Yii::t('app', 'Customer'),
			'supplier' => Yii::t('app', 'Supplier'),
			'code' => Yii::t('app', 'Code'),
			'resCompanies' => null,
			'company' => null,
			'country' => null,
			'title0' => null,
			'resPartnerResPartnerCategoryRels' => null,
			'resPartnerTitles' => null,
			'users' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('company_id', $this->company_id);
		$criteria->compare('create_uid', $this->create_uid);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('write_uid', $this->write_uid);
		$criteria->compare('write_date', $this->write_date, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('country_id', $this->country_id);
		$criteria->compare('lang', $this->lang, true);
		$criteria->compare('parent_id', $this->parent_id);
		$criteria->compare('title', $this->title);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('address1', $this->address1, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('website', $this->website, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('fax', $this->fax, true);
		$criteria->compare('zipcode', $this->zipcode, true);
		$criteria->compare('customer', $this->customer);
		$criteria->compare('supplier', $this->supplier);
		$criteria->compare('code', $this->code, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}