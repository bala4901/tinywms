<?php

/**
 * This is the model base class for the table "applications".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Applications".
 *
 * Columns in table "applications" available as properties of the model,
 * followed by relations of table "applications" available as properties of the model.
 *
 * @property integer $application_k
 * @property integer $application_parent_k
 * @property string $name
 * @property string $description
 * @property string $klass
 * @property string $configurations
 * @property string $date_created
 * @property string $date_updated
 * @property integer $active
 * @property integer $sort
 *
 * @property Permissions[] $permissions
 */
abstract class BaseApplications extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'applications';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Applications|Applications', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, description, klass, configurations, date_created, date_updated, active', 'required'),
			array('application_parent_k, active, sort', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>200),
			array('klass', 'length', 'max'=>255),
			array('application_parent_k, sort', 'default', 'setOnEmpty' => true, 'value' => null),
			array('application_k, application_parent_k, name, description, klass, configurations, date_created, date_updated, active, sort', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'permissions' => array(self::HAS_MANY, 'Permissions', 'application_k'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'application_k' => Yii::t('app', 'Application K'),
			'application_parent_k' => Yii::t('app', 'Application Parent K'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'klass' => Yii::t('app', 'Klass'),
			'configurations' => Yii::t('app', 'Configurations'),
			'date_created' => Yii::t('app', 'Date Created'),
			'date_updated' => Yii::t('app', 'Date Updated'),
			'active' => Yii::t('app', 'Active'),
			'sort' => Yii::t('app', 'Sort'),
			'permissions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('application_k', $this->application_k);
		$criteria->compare('application_parent_k', $this->application_parent_k);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('klass', $this->klass, true);
		$criteria->compare('configurations', $this->configurations, true);
		$criteria->compare('date_created', $this->date_created, true);
		$criteria->compare('date_updated', $this->date_updated, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('sort', $this->sort);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}